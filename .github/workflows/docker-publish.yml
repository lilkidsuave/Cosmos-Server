name: Docker Build and Push to GHCR

on:
  workflow_dispatch:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            bash coreutils curl wget \
            ca-certificates openssl fdisk mergerfs snapraid avahi-daemon avahi-utils \
            nodejs

          # Install Go
          curl -fsSL https://get.docker.com | sudo sh
          wget https://golang.org/dl/go1.21.6.linux-amd64.tar.gz
          sudo rm -rf /usr/local/go && sudo tar -C /usr/local -xzf go1.21.6.linux-amd64.tar.gz
          echo 'PATH=$PATH:/usr/local/go/bin' >> $GITHUB_ENV

          # Install NVM and Node.js
          export NVM_DIR="$HOME/.nvm"
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash
          . $NVM_DIR/nvm.sh
          nvm install v16
          nvm alias default v16
          
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        run: |
          npm install
          npm run client-build
          curl -s -L "https://download.maxmind.com/app/geoip_download?edition_id=GeoLite2-Country&license_key=${{ secrets.MAX_TOKEN }}&suffix=tar.gz" -o GeoLite2-Country.tar.gz
          tar -xzf GeoLite2-Country.tar.gz --strip-components 1 --wildcards "*.mmdb"
          curl -LO https://github.com/slackhq/nebula/releases/download/v1.8.2/nebula-linux-arm64.tar.gz
          tar -xzvf nebula-linux-arm64.tar.gz
          mv nebula nebula-arm
          mv nebula-cert nebula-arm-cert
          curl -LO https://github.com/slackhq/nebula/releases/download/v1.8.2/nebula-linux-amd64.tar.gz
          tar -xzvf nebula-linux-amd64.tar.gz
          docker buildx create --use
          docker buildx build --platform linux/amd64,linux/arm64 -t ghcr.io/lilkidsuave/cosmos-server:latest -t ghcr.io/lilkidsuave/cosmos-server:unstable .

      - name: Push Docker image
        run: docker push ghcr.io/lilkidsuave/qbdlgui-reborn

      - name: Log out from GitHub Container Registry
        run: docker logout ghcr.io
